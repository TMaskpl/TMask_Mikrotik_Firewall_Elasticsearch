import os
import json
import socket
import logging
import cx_Oracle
from time import sleep
from kafka import KafkaConsumer
from prometheus_client import start_http_server, Counter, Histogram
from datetime import datetime
from cmreslogging.handlers import CMRESHandler

# Prometheus metrics
messages_consumed = Counter('kafka_messages_consumed_total', 'Messages consumed from Kafka')
messages_inserted = Counter('oracle_messages_inserted_total', 'Messages inserted into Oracle DB')
errors_counter = Counter('processing_errors_total', 'Total processing errors')

kafka_processing_time = Histogram('kafka_message_processing_seconds', 'Kafka message processing time')
oracle_insert_time = Histogram('oracle_insert_seconds', 'Oracle insert time')

# Elasticsearch logger
logger = logging.getLogger("kafka_oracle_logger")
logger.setLevel(logging.INFO)
logger.addHandler(CMRESHandler(
    hosts=[{'host': os.getenv("ELASTIC_HOST", "localhost"), 'port': int(os.getenv("ELASTIC_PORT", "9200"))}],
    auth_type=CMRESHandler.AuthType.NO_AUTH,
    es_index_name="kafka-oracle-logs",
    use_ssl=False,
    raise_on_indexing_exceptions=False,
    buffer_size=1
))

# Oracle config
ORACLE_DSN = cx_Oracle.makedsn(
    os.getenv("ORACLE_HOST", "oracle"),
    int(os.getenv("ORACLE_PORT", "1521")),
    service_name=os.getenv("ORACLE_SERVICE", "orclpdb1")
)
ORACLE_USER = os.getenv("ORACLE_USER", "user")
ORACLE_PASSWORD = os.getenv("ORACLE_PASSWORD", "pass")

# Kafka consumer config
consumer = KafkaConsumer(
    os.getenv("KAFKA_TOPIC", "my_topic"),
    bootstrap_servers=os.getenv("KAFKA_BOOTSTRAP", "localhost:9092").split(","),
    security_protocol="SASL_PLAINTEXT",  # Change to "SASL_SSL" if needed
    sasl_mechanism="PLAIN",
    sasl_plain_username=os.getenv("KAFKA_USERNAME"),
    sasl_plain_password=os.getenv("KAFKA_PASSWORD"),
    auto_offset_reset='earliest',
    group_id=os.getenv("KAFKA_GROUP", "my-group"),
    enable_auto_commit=True,
    value_deserializer=lambda m: m.decode('utf-8')
)

# Start Prometheus metrics server
start_http_server(8000)

@kafka_processing_time.time()
def process_message(msg_value):
    try:
        data = json.loads(msg_value)
        name = data.get("name")
        value = data.get("value")

        with oracle_insert_time.time():
            connection = cx_Oracle.connect(ORACLE_USER, ORACLE_PASSWORD, ORACLE_DSN)
            cursor = connection.cursor()
            cursor.execute(
                "INSERT INTO my_table (name, value) VALUES (:name, :value)",
                {"name": name, "value": value}
            )
            connection.commit()
            cursor.close()
            connection.close()

        logger.info("Message inserted into Oracle", extra={"data": data})
        messages_inserted.inc()
    except Exception as e:
        logger.error(f"Failed to process message: {str(e)}")
        errors_counter.inc()

def main():
    logger.info("Kafka Oracle Consumer started")
    for msg in consumer:
        try:
            msg_val = msg.value
            logger.info("Kafka message received", extra={"raw": msg_val})
            messages_consumed.inc()
            process_message(msg_val)
        except Exception as e:
            logger.error(f"Unexpected error: {str(e)}")
            errors_counter.inc()

if __name__ == "__main__":
    main()
