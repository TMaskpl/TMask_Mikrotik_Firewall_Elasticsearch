# Ścieżka do pliku z listą hostów
$hostsFile = ".\hosts.txt"

# Sprawdź, czy plik istnieje
if (-Not (Test-Path $hostsFile)) {
    Write-Error "Plik z listą hostów '$hostsFile' nie istnieje."
    exit
}

# Pobierz listę hostów z pliku
$hosts = Get-Content $hostsFile

# Ustaw datę początku i końca dnia wczorajszego
$yesterdayStart = (Get-Date).AddDays(-1).Date
$yesterdayEnd = $yesterdayStart.AddDays(1).AddSeconds(-1)

foreach ($host in $hosts) {
    Write-Output "==============================="
    Write-Output "Host: $host"
    Write-Output "==============================="

    try {
        # Pobierz zdarzenia 4625 z Security z dnia wczorajszego z zdalnego hosta
        $events = Get-WinEvent -ComputerName $host -FilterHashtable @{
            LogName = 'Security'
            Id = 4625
            StartTime = $yesterdayStart
            EndTime = $yesterdayEnd
        } -ErrorAction Stop

        if ($events.Count -eq 0) {
            Write-Output "Brak nieudanych logowań (4625) z dnia $($yesterdayStart.ToString('yyyy-MM-dd')) na hoście $host."
        } else {
            # Nazwa pliku wynikowego, np. Nieudane_logowania_4625_host1_2025-05-27.txt
            $outputFile = "Nieudane_logowania_4625_${host}_$($yesterdayStart.ToString('yyyy-MM-dd')).txt"

            # Przygotuj zawartość do zapisu
            $outputContent = foreach ($event in $events) {
                $timeCreated = $event.TimeCreated
                $message = $event.Message
                "Czas: $timeCreated`nSzczegóły zdarzenia:`n$message`n-------------------------------------------"
            }

            # Zapisz do pliku
            $outputContent | Out-File -FilePath $outputFile -Encoding UTF8

            Write-Output "Zapisano $($events.Count) zdarzeń do pliku: $outputFile"
        }
    }
    catch {
        Write-Warning "Nie udało się pobrać zdarzeń z hosta $host. Błąd: $_"
    }
}
